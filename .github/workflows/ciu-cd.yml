name: CI CD Django

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0 
        env:
          MYSQL_DATABASE: facecris_db
          MYSQL_USER: root
          MYSQL_PASSWORD: M1P@ssw0rd!Str0ng2024
          MYSQL_ROOT_PASSWORD: M1P@ssw0rd!Str0ng2024
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.12]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run migrations
        env:
          MYSQL_DATABASE: facecris_db
          MYSQL_USER: root
          MYSQL_PASSWORD: M1P@ssw0rd!Str0ng2024
          MYSQL_HOST: 127.0.0.1
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run tests
        env:
          MYSQL_DATABASE: facecris_db
          MYSQL_USER: root
          MYSQL_PASSWORD: M1P@ssw0rd!Str0ng2024
          MYSQL_HOST: 127.0.0.1
        run: |
          source venv/bin/activate
          python manage.py test

  deploy:
    needs: test  # Este trabajo solo se ejecuta si el trabajo 'test' pasa
    runs-on: self-hosted

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.12]

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install gunicorn

      - name: Run migrations
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Reset supervisor
        run: sudo service supervisor restart
